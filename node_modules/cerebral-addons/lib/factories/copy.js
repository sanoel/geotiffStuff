'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (fromPath) {
  var getValue = (0, _get2.default)(fromPath);

  for (var _len = arguments.length, toPaths = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    toPaths[_key - 1] = arguments[_key];
  }

  var setValues = toPaths.map(function (toPath) {
    return (0, _set2.default)(toPath);
  });

  var copyTo = function copyTo(setters, args, value, async) {
    if (setters.length === 0) {
      if (async) {
        args.output.success(value);
      }
    } else {
      var response = setters[0](args, value);
      if (response && typeof response.then === 'function') {
        response.then(function (val) {
          return copyTo(setters.slice(1), args, val, true);
        }).catch(args.output.error);
      } else {
        copyTo(setters.slice(1), args, response, async);
      }
    }
  };

  var copy = function copyFrom(args) {
    var value = getValue(args);
    if (value && typeof value.then === 'function') {
      value.then(function (val) {
        return copyTo(setValues, args, val, true);
      }).catch(args.output.error);
    } else {
      copyTo(setValues, args, value);
    }
  };

  copy.displayName = 'addons.copy(' + (0, _toDisplayName2.default)(fromPath, getValue) + ', ' + toPaths.map(function (path, index) {
    return (0, _toDisplayName2.default)(path, setValues[index]);
  }).join(', ') + ')';

  return copy;
};

var _get = require('cerebral-url-scheme-compiler/get');

var _get2 = _interopRequireDefault(_get);

var _set = require('cerebral-url-scheme-compiler/set');

var _set2 = _interopRequireDefault(_set);

var _toDisplayName = require('../helpers/toDisplayName');

var _toDisplayName2 = _interopRequireDefault(_toDisplayName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }